{"version":3,"sources":["Components/Card/Cards.jsx","Components/Chart/Chart.jsx","Components/StatePicker/StatePicker.jsx","api/index.js","App.js","index.js"],"names":["Cards","props","console","log","data","confirmed","className","Grid","container","spacing","justify","item","component","Card","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","lastUpdatedTime","deaths","recovered","Chart","StatePicker","FormControl","NativeSelect","onChange","e","handleStateChange","target","value","stateList","map","states","index","key","state","FetchData","a","axios","get","status","resp","ModifiedData","statewise","lastupdatedtime","App","stateIndex","stateChange","st","ind","findIndex","setState","this","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc2ee7b2.chunk.js","sourcesContent":[" import React from 'react'\r\nimport {Card,CardContent, Typography,Grid} from '@material-ui/core'\r\nimport Countup from 'react-countup'\r\nimport './Cards.css'\r\nconst Cards = (props) => {\r\n    console.log(\"abc\",props)\r\n    if(!props.data.confirmed){\r\n        return \"Loading.....\"\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <Grid container spacing={3} justify=\"centre\">\r\n                <Grid  item component={Card} xs={12} md={3} className=\"card infected\">\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Confirmed</Typography>\r\n                        <Typography variant='h5'>\r\n                            <Countup\r\n                                start={0}\r\n                                end={props.data.confirmed}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{props.data.lastUpdatedTime}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card}xs={12} md={3} className=\"card deaths\">\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <Countup\r\n                                    start={0}\r\n                                    end={props.data.deaths}\r\n                                    duration={2.5}\r\n                                    separator=\",\"\r\n\r\n                                />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{props.data.lastUpdatedTime}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries of covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className=\"card recovered\">\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <Countup\r\n                                        start={0}\r\n                                        end={props.data.recovered}\r\n                                        duration={2.5}\r\n                                        separator=\",\"\r\n\r\n                                    />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{props.data.lastUpdatedTime}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths due to covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react'\r\n\r\nconst Chart = (props) => {\r\n    return(\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react'\r\nimport{FormControl,NativeSelect} from '@material-ui/core'\r\n\r\nconst StatePicker = (props) => {\r\n    console.log(\"shshshshs\",props)\r\n    return(\r\n        <FormControl>\r\n            <NativeSelect onChange={(e) => props.handleStateChange(e.target.value)}>\r\n                {props.stateList.map((states,index) => <option key={index} value={states.state}>{states.state}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default StatePicker;","import axios from 'axios'\r\n\r\nconst url = \"https://api.covid19india.org/data.json\"\r\n\r\nexport const FetchData = async() => {\r\n    try {\r\n        const data = await axios.get(url)\r\n        // console.log(data)\r\n        if(data && data.status===200 && data.data){\r\n            let resp = data.data\r\n            const ModifiedData = {\r\n                confirmed:resp.statewise[0].confirmed,\r\n                deaths:resp.statewise[0].deaths,\r\n                recovered:resp.statewise[0].recovered,\r\n                lastUpdatedTime:resp.statewise[0].lastupdatedtime,\r\n                states:resp.statewise\r\n            }\r\n            return ModifiedData;\r\n        }\r\n        \r\n       \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React from 'react'\r\nimport {Cards,Chart,StatePicker} from './Components'\r\nimport './App.module.css'\r\nimport {FetchData} from './api'\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state={\r\n        data:null,\r\n        states:[],\r\n        stateIndex:0\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        const data = await FetchData()\r\n        \r\n        console.log(\"xyz\",data.states)\r\n\r\n        if (data){\r\n            this.setState({\r\n                data:data,\r\n                states:data.states\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    stateChange = async(st) => {\r\n        console.log(typeof(st))\r\n        if(st){\r\n            const ind = this.state.states.findIndex((state)=> state.state === st)\r\n            console.log(ind)\r\n            this.setState({\r\n                stateIndex:ind\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Covid 19 cases in India</h1>\r\n                <StatePicker stateList={this.state.states} handleStateChange={this.stateChange} />\r\n                {this.state.data ? <Cards data={this.state.states[this.state.stateIndex]}/> : null}\r\n                <Chart />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDom.render(<App />,document.getElementById('root'))"],"sourceRoot":""}